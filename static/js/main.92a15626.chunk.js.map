{"version":3,"sources":["redux/actionTypes.js","constants.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","redux/actions.js","redux/selectors.js","utilities.js","components/AddTodo.js","components/Todo.js","components/TodoList.js","components/VisibilityFilters.js","GlobalCss.js","TodoApp.js","index.js"],"names":["ADD_TODO","EDIT_TODO","UPDATE_TODO","DELETE_TODO","CLEAR_TODO","TOGGLE_TODO","SET_FILTER","VISIBILITY_FILTERS","ALL","COMPLETED","IMCOMPLETE","initialState","visibilityFilter","state","action","type","payload","filter","allIds","byIds","combineReducers","todos","id","content","completed","isEditing","filteredByIds","Object","keys","objId","Number","reduce","res","oldId","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","nextTodoId","getTodosState","store","getTodos","getTodoList","map","getTodoById","checkEditing","handleFunction","some","todo","AddTodo","styled","addTodo","clearTodo","useState","value","setValue","handleAddTodo","onChange","e","target","className","onClick","connect","TodoWrapper","div","Todo","toggleTodo","updateTodo","deleteTodo","editTodo","useEffect","timer","inputRef","current","setInterval","focus","clearInterval","handleEditTodo","handleToggleTodo","useRef","TodoContent","cx","ref","autoFocus","onBlur","updateClassName","deleteClassName","relatedTarget","classList","contains","alert","EditTodo","Button","UpdateTodo","DeleteTodo","button","TodoList","length","allTodos","getTodosByVisibilityFilter","VisibilityFilters","activeFilter","setFilter","console","log","filterKey","currentFilter","GlobalStyle","createGlobalStyle","TodoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a15626.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const CLEAR_TODO = \"CLEAR_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\n","export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  IMCOMPLETE: \"imcomplete\",\n};\n","import { SET_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload.filter;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default visibilityFilter;\n","import {\n  ADD_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n  CLEAR_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n} from \"../actionTypes\";\n\nconst initialState = {\n  allIds: [],\n  byIds: {},\n};\n\nexport default function todoReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            content,\n            completed: false,\n            isEditing: false,\n          },\n        },\n      };\n    }\n    case UPDATE_TODO: {\n      const { id, content } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            content,\n            isEditing: !state.byIds[id].isEditing,\n          },\n        },\n      };\n    }\n    case EDIT_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            isEditing: !state.byIds[id].isEditing,\n          },\n        },\n      };\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload;\n      const filteredByIds = Object.keys(state.byIds)\n        .filter((objId) => {\n          return Number(objId) !== id;\n        })\n        .reduce((res, objId) => {\n          res[objId] = state.byIds[objId];\n          return res;\n        }, {});\n      return {\n        allIds: state.allIds.filter((oldId) => oldId !== id),\n        byIds: filteredByIds,\n      };\n    }\n    case CLEAR_TODO: {\n      const { allIds, byIds } = action.payload;\n      return {\n        allIds,\n        byIds,\n      };\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import {\n  ADD_TODO,\n  EDIT_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n  CLEAR_TODO,\n  TOGGLE_TODO,\n  SET_FILTER,\n} from \"./actionTypes\";\n\nlet nextTodoId = 0;\n\nexport const addTodo = (content) => ({\n  type: ADD_TODO,\n  payload: {\n    id: ++nextTodoId,\n    content,\n  },\n});\n\nexport const updateTodo = (id, content) => ({\n  type: UPDATE_TODO,\n  payload: {\n    id,\n    content,\n  },\n});\n\nexport const editTodo = (id) => ({\n  type: EDIT_TODO,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteTodo = (id) => ({\n  type: DELETE_TODO,\n  payload: {\n    id: id,\n  },\n});\nexport const clearTodo = () => ({\n  type: CLEAR_TODO,\n  payload: {\n    allIds: [],\n    byIds: {},\n  },\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  payload: { id },\n});\n\nexport const setFilter = (filter) => ({\n  type: SET_FILTER,\n  payload: { filter },\n});\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = (store) => store.todos;\n\nexport const getTodoList = (store) => {\n  return getTodosState(store) ? getTodosState(store).allIds : [];\n};\n\nexport const getTodoById = (store, id) => {\n  return getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n};\n\nexport const getTodos = (store) =>\n  getTodoList(store).map((id) => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter((todo) => todo.completed);\n    case VISIBILITY_FILTERS.IMCOMPLETE:\n      return allTodos.filter((todo) => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n","export const checkEditing = (handleFunction, todos) => {\n  const isEditing = todos.some((todo) => todo.isEditing === true);\n  return function () {\n    handleFunction(isEditing);\n  };\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo, clearTodo } from \"../redux/actions\";\nimport { getTodos } from \"../redux/selectors\";\nimport { checkEditing } from \"../utilities\";\nimport styled from \"styled-components\";\n\nfunction MyAddTodo({ todos, addTodo, clearTodo }) {\n  const [value, setValue] = useState(\"\");\n  const handleAddTodo = checkEditing((isEditing) => {\n    if (value && !isEditing) {\n      addTodo(value);\n      setValue(\"\");\n    }\n  }, todos);\n  const handleClearTodo = () => {\n    clearTodo();\n  };\n  return (\n    <div>\n      <input onChange={(e) => setValue(e.target.value)} value={value} />\n      <button className=\"add-todo\" onClick={handleAddTodo}>\n        Add Todo\n      </button>\n      <button className=\"delete-todo\" onClick={handleClearTodo}>\n        Clear Todo\n      </button>\n    </div>\n  );\n}\n\nconst AddTodo = styled(MyAddTodo)`\n  margin-left: 0.5rem;\n`;\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: getTodos(state),\n  };\n};\n\nexport default connect(mapStateToProps, { addTodo, clearTodo })(AddTodo);\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleTodo, updateTodo, deleteTodo, editTodo } from \"../redux/actions\";\nimport { getTodos } from \"../redux/selectors\";\nimport { checkEditing } from \"../utilities\";\nimport cx from \"classnames\";\nimport styled from \"styled-components\";\n\nfunction MyTodo({ todos, todo, toggleTodo, updateTodo, deleteTodo, editTodo }) {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    let timer;\n    if (todo.isEditing && inputRef.current) {\n      timer = setInterval(() => {\n        inputRef.current.focus();\n      }, 10);\n    }\n    return () => clearInterval(timer);\n  }, [todo.isEditing]);\n\n  const handleDeleteTodo = (id) => {\n    deleteTodo(id);\n  };\n  const handleEditTodo = checkEditing((isEditing) => {\n    if (!isEditing) {\n      setValue(todo.content);\n      editTodo(todo.id);\n    }\n  }, todos);\n  const handleUpdateTodo = () => {\n    updateTodo(todo.id, value);\n  };\n\n  const handleToggleTodo = checkEditing((isEditing) => {\n    if (!isEditing) {\n      return !todo.isEditing ? toggleTodo(todo.id) : null;\n    }\n  }, todos);\n\n  const handleOnblur = (e) => {\n    let updateClassName;\n    let deleteClassName;\n    if (e.relatedTarget) {\n      updateClassName = e.relatedTarget.classList.contains(\"update-todo\");\n      deleteClassName = e.relatedTarget.classList.contains(\"delete-todo\");\n    }\n    if (!updateClassName && !deleteClassName) {\n      alert(\"請編輯完再進行其它操作!\");\n    }\n  };\n\n  const inputRef = useRef();\n  const TodoContent = todo.isEditing ? (\n    <input\n      className={cx(\n        \"todo-item__text\",\n        todo && todo.completed && \"todo-item__text--completed\"\n      )}\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value);\n      }}\n      ref={inputRef}\n      autoFocus={true}\n      onBlur={handleOnblur}\n    />\n  ) : (\n    <span\n      className={cx(\n        \"todo-item__text\",\n        todo && todo.completed && \"todo-item__text--completed\"\n      )}\n    >\n      {todo.content}\n    </span>\n  );\n\n  const EditTodo = (\n    <Button className=\"edit-todo\" onClick={handleEditTodo}>\n      Edit Todo\n    </Button>\n  );\n  const UpdateTodo = (\n    <Button className=\"update-todo\" onClick={handleUpdateTodo}>\n      Update Todo\n    </Button>\n  );\n\n  const DeleteTodo = (\n    <Button\n      className=\"delete-todo\"\n      onClick={() => {\n        handleDeleteTodo(todo.id);\n      }}\n    >\n      Delete Todo\n    </Button>\n  );\n  return (\n    <TodoWrapper>\n      <li className=\"todo-item\" onClick={handleToggleTodo}>\n        {todo && todo.isEditing ? \"📝\" : todo.completed ? \"👌\" : \"👋\"}{\" \"}\n        {TodoContent}\n      </li>\n      <div>\n        {todo.completed ? null : todo.isEditing ? UpdateTodo : EditTodo}\n        {DeleteTodo}\n      </div>\n    </TodoWrapper>\n  );\n}\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Todo = styled(MyTodo)`\n  margin-left: 0.5rem;\n`;\n\nconst Button = styled.button`\n  margin-left: 0.5rem;\n`;\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: getTodos(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleTodo,\n  updateTodo,\n  deleteTodo,\n  editTodo,\n})(Todo);\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport { connect } from \"react-redux\";\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\nimport styled from \"styled-components\";\n\nfunction MyTodoList({ todos, className }) {\n  return (\n    <ul className={className}>\n      {todos && todos.length\n        ? todos.map((todo) => {\n            return <Todo key={`todo-${todo.id}`} todo={todo} />;\n          })\n        : \"No todos, yay!\"}\n    </ul>\n  );\n}\n\nconst TodoList = styled(MyTodoList)`\n  margin-top: 1rem;\n  text-align: left;\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nconst mapStateToProps = (state) => {\n  const { visibilityFilter } = state;\n  const todos = getTodosByVisibilityFilter(state, visibilityFilter);\n  return { todos };\n};\n\nexport default connect(mapStateToProps)(TodoList);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\nimport { setFilter } from \"../redux/actions\";\nimport { getTodos } from \"../redux/selectors\";\nimport styled from \"styled-components\";\n\nfunction MyVisibilityFilters({ activeFilter, todos, setFilter }) {\n  console.log(\n    todos.some((todo) => {\n      return todo.isEditing === true;\n    })\n  );\n  return (\n    <div className=\"visibility-filters\">\n      {Object.keys(VISIBILITY_FILTERS).map((filterKey) => {\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\n        return (\n          <span\n            key={`visibility-filter-${currentFilter}`}\n            className={cx(\n              \"filter\",\n              currentFilter === activeFilter && \"filter--active\"\n            )}\n            onClick={() => {\n              const isEditing = todos.some((todo) => todo.isEditing === true);\n              if (!isEditing) {\n                setFilter(currentFilter);\n              }\n            }}\n          >\n            {currentFilter}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nconst VisibilityFilters = styled(MyVisibilityFilters)`\n  margin-top: 1rem;\n  text-align: left;\n  list-style: none;\n`;\n\nconst mapStateToProps = (state) => {\n  return {\n    activeFilter: state.visibilityFilter,\n    todos: getTodos(state),\n  };\n};\n\nexport default connect(mapStateToProps, { setFilter })(VisibilityFilters);\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  .todo-item {\n  font-family: monospace;\n  cursor: pointer;\n  line-height: 1.5;\n}\n\n .todo-item__text {\n   margin-right: 2rem;\n }\n.todo-item__text--completed {\n  text-decoration: line-through;\n  color: lightgray;\n}\n\n/** visibility filters **/\n.filter {\n  padding: 0.3rem 0;\n  margin: 0 0.3rem;\n  cursor: pointer;\n}\n.filter--active {\n  border-bottom: 1px solid black;\n}\n\n`;\n","import React from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\nimport styled from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalCss\";\n\nfunction MyTodoApp({ className }) {\n  return (\n    <div className={className}>\n      <GlobalStyle />\n      <h1>Todo List</h1>\n      <AddTodo />\n      <TodoList />\n      <VisibilityFilters />\n    </div>\n  );\n}\nconst TodoApp = styled(MyTodoApp)`\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport TodoApp from \"./TodoApp\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}